{"version":3,"sources":["node_modules/@expo/config-plugins/build/utils sync","assets/icon.png","assets/splash.png","node_modules/simple-plist/dist sync","modules/main/index.tsx","modules/main/datatable.tsx","modules/main/input.tsx","modules/main/add.tsx","modules/main/main.tsx","modules/main/print.tsx","modules/main/sample.tsx","modules/main/side.tsx","modules/web/index.tsx","src/serviceWorkerRegistration.js","App.tsx","assets/adaptive-icon.png","assets/favicon.png","assets/fix_deeplink_android.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","state","useGlobalState","persistKey","selected","undefined","m","props","_useSafeState","useSafeState","_useSafeState2","_slicedToArray","slidingRef","useRef","_selected$useState","useState","selectedData","_state$useState","_state$useState2","data","_useSafeState3","_useSafeState4","datatable","setDatatable","_useSafeState5","_useSafeState6","headers","setHeaders","useEffect","obj","title","forEach","item","variant","push","combine","options","optionIndex","arguments","length","results","current","allKeys","Object","optionKey","vals","i","res","JSON","parse","stringify","_jsxs","View","style","flex","backgroundColor","children","_jsx","flexDirection","FlatList","renderItem","_ref","index","Pressable","onPress","_slidingRef$current","reset","set","_objectSpread","console","log","get","show","marginHorizontal","borderWidth","paddingHorizontal","paddingTop","paddingBottom","marginVertical","borderRadius","LibStyle","elevation","LibTextstyle","textStyle","text","x","LibObject","splice","LibIcon","name","MainDatatable","_slidingRef$current2","height","minWidth","Math","min","width","alignSelf","alignItems","justifyContent","padding","color","LibSlidingup","ref","paddingVertical","MainInput","defaultValue","onSave","_slidingRef$current3","hide","Header","sort","setSort","_View","size","borderColor","borderLeftWidth","numeric","_Text","fontSize","textAlign","textAlignVertical","fontWeight","Cell","borderRightWidth","borderRightColor","LibUtils","number","TextInput","placeholder","toString","placeholderTextColor","outlineWidth","_props$data","STATUSBAR_HEIGHT","ScrollView","horizontal","overflow","map","toUpperCase","borderBottomWidth","row","idx","colors","variantRef","titleRef","margin","label","autoCapitalize","multiline","join","getText","split","LibToastProperty","marginBottom","_asyncToGenerator","_port$writable","render","Printer","type","Text","port","window","navigator","serial","requestPort","open","baudRate","writer","writable","getWriter","write","releaseLock","setShow","setTimeout","Print","RenderIf","position","top","right","PrintA5","ImageBackground","source","uri","left","paddingRight","marginLeft","QRCode","value","marginTop","_name","_phone","base","getSideWidth","Dimensions","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","App","globalIdx","ErrorReport","UserIndex","enableFreeze","enableScreens","Notifications","LibNotification","onAction","URL","process","href","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","require","createRunOncePlugin","withAndroidManifest","activityHasSingleTaskLaunchMode","activity","$","intentFilterHasAutoVerification","intentFilter","intentFilterRemoveSchemeFromData","schemeMatcher","filter","entry","modResults","androidManifest","application","manifest","scheme","startsWith","removeExpoSchemaFromVerifiedIntentFilters"],"mappings":"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","file":"static/js/app.760555e3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1103;","module.exports = __webpack_public_path__ + \"static/media/icon.608e4d9d.png\";","module.exports = __webpack_public_path__ + \"static/media/splash.59202d46.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 165;","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibIcon } from 'esoftplay/cache/lib/icon/import';\nimport { LibObject } from 'esoftplay/cache/lib/object/import';\nimport { LibSlidingup } from 'esoftplay/cache/lib/slidingup/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport { MainDatatable } from 'esoftplay/cache/main/datatable/import';\nimport { MainInput } from 'esoftplay/cache/main/input/import';\nimport useGlobalState from 'esoftplay/global';\nimport React, { useEffect, useRef } from 'react';\nimport { FlatList, Pressable, View } from 'react-native';\n\n\nexport interface MainIndexArgs {\n\n}\nexport interface MainIndexProps {\n\n}\n\nconst state = useGlobalState<any[]>([], { persistKey: 'main/index' })\nconst selected = useGlobalState<any>(undefined)\nfunction combine(options: any, optionIndex = 0, results: any[] = [], current: any = {}) {\n  let allKeys = Object.keys(options);\n  let optionKey = allKeys[optionIndex];\n  let vals = options[optionKey];\n  // console.log('optionKey', optionKey, vals);\n  if (vals)\n    for (let i = 0; i < vals.length; i++) {\n      current[optionKey] = vals[i];\n      if (optionIndex + 1 < allKeys.length) {\n        combine(options, optionIndex + 1, results, current);\n      } else {\n        let res = JSON.parse(JSON.stringify(current));\n        results.push(res);\n      }\n    }\n  return results;\n}\nexport default function m(props: MainIndexProps): any {\n  const [user, setUsers] = useSafeState([])\n  const slidingRef = useRef<LibSlidingup>(null)\n  const [selectedData] = selected.useState()\n  const [data, setData] = state.useState()\n  const [datatable, setDatatable] = useSafeState<any[]>([]);\n  const [headers, setHeaders] = useSafeState([]);\n\n  useEffect(() => {\n    let obj: any = {}\n    let title: any = []\n    data.forEach((item) => {\n      obj[item.title] = item.variant\n      title.push(item.title)\n    })\n    setDatatable(combine(obj))\n    setHeaders(title)\n  }, [data])\n\n  return (\n    <View style={{ flex: 1, backgroundColor: '#fff' }} >\n      <View style={{ flexDirection: 'row' }} >\n        <FlatList\n          data={data}\n          renderItem={({ item, index }) => {\n            return (\n              <Pressable\n                onPress={() => {\n                  selected.reset()\n                  selected.set({ ...item, index })\n                  console.log(selected.get())\n                  slidingRef.current?.show()\n                }}\n                style={{ marginHorizontal: 16, flexDirection: 'row', borderWidth: 2, paddingHorizontal: 10, paddingTop: 10, paddingBottom: 8, marginVertical: 8, borderRadius: 5, backgroundColor: 'white', ...LibStyle.elevation(2) }} >\n                <View style={{ flex: 1 }} >\n                  <LibTextstyle textStyle='m_h5' text={item.title} />\n                  <LibTextstyle textStyle='m_caption' text={JSON.stringify(item.variant)} />\n                </View>\n                <Pressable onPress={() => {\n                  let x = LibObject.splice(state.get(), index, 1)()\n                  state.set(x)\n                }} >\n                  <LibIcon name='close' />\n                </Pressable>\n              </Pressable>\n            )\n          }}\n        />\n      </View>\n      <View style={{ flex: 1 }} >\n        {\n          data.length > 0 &&\n          <MainDatatable headers={headers} data={datatable} />\n        }\n      </View>\n      <View>\n        <Pressable\n          onPress={() => {\n            // LibNavigation.push('main/print')\n            selected.reset()\n            slidingRef?.current?.show()\n          }}\n          style={{ backgroundColor: '#2DA44E', height: 30, borderRadius: 5, minWidth: Math.min(600, LibStyle.width - 30), alignSelf: 'center', marginVertical: 40, marginHorizontal: 16, alignItems: 'center', justifyContent: 'center', padding: 20, ...LibStyle.elevation(4) }} >\n          <LibTextstyle text='Add' textStyle='m_button' style={{ color: 'white' }} />\n        </Pressable>\n      </View>\n      <LibSlidingup ref={slidingRef} >\n        <View style={{ alignItems: 'center' }} >\n          <View style={{ minWidth: Math.min(LibStyle.width, 600), backgroundColor: 'white', paddingVertical: 20, borderRadius: 10 }} >\n            <MainInput defaultValue={selectedData} onSave={(title, variant) => {\n              let x\n              if (!selectedData) {\n                x = LibObject.push(state.get(), { title: title, variant: variant })()\n              } else {\n                x = LibObject.set(state.get(), { title: title, variant: variant })(selectedData.index)\n              }\n              state.set(x)\n              slidingRef.current?.hide()\n            }} />\n          </View>\n        </View>\n      </LibSlidingup>\n    </View>\n  )\n}\n","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibDropdown } from 'esoftplay/cache/lib/dropdown/import';\nimport { LibIcon } from 'esoftplay/cache/lib/icon/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibUtils } from 'esoftplay/cache/lib/utils/import';\nimport React from 'react';\nimport { Pressable, ScrollView, Text, TextInput, View } from 'react-native';\n\nexport interface LibDatatableArgs {\n\n}\nexport interface LibDatatableProps {\n  headers: string[],\n  data: any[]\n}\n\nexport interface HeaderProps {\n  title: string,\n  numeric?: boolean,\n  size?: number\n}\n\n\nconst Header = {\n  Text: (props: HeaderProps) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <Text style={{ fontSize: 20, textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n      </View>\n    )\n  },\n  TextSortable: (props: HeaderProps) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <Text selectable={false} style={{ fontSize: 20, textDecorationLine: 'underline', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n        {\n          sort == 1 ?\n            <LibIcon.FontAwesome name={'sort-asc'} size={16} style={{ marginTop: 4 }} /> :\n            sort == 2 ?\n              <LibIcon.FontAwesome name={'sort-desc'} size={16} style={{ marginTop: 4 }} />\n              : <LibIcon.FontAwesome name={'sort'} size={16} style={{ marginTop: 4, opacity: 0 }} />\n        }\n      </Pressable>\n    )\n  },\n  Checkbox: (props: any) => {\n    const [sort, setSort] = useSafeState(0)\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"#a9a9a9\", paddingHorizontal: 11, paddingVertical: 10, borderLeftWidth: 0, flexDirection: props.numeric ? 'row-reverse' : 'row', backgroundColor: '#efefef', justifyContent: 'flex-start', alignItems: 'center' }} onPress={() => { setSort(sort < 2 ? sort + 1 : 0) }} >\n        <LibIcon name='checkbox-blank-outline' style={{ marginTop: 5 }} />\n        <Text style={{ fontSize: 20, textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', fontWeight: 'bold', marginHorizontal: 5 }} >{props.title}</Text>\n      </Pressable>\n    )\n  }\n}\n\nconst Cell = {\n  View: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        {props.children}\n      </View>\n    )\n  },\n  Text: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 10, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <Text style={{ fontSize: 18, color: '#232323', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', marginHorizontal: 5 }} >{props.numeric ? LibUtils.number(props.title) : props.title}</Text>\n      </View>\n    )\n  },\n  Button: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <Pressable style={{ padding: 6, borderRadius: 5, backgroundColor: 'white', ...LibStyle.elevation(3) }} >\n          <Text selectable={false} style={{ color: 'indigo', textAlign: 'center', fontWeight: \"bold\", paddingHorizontal: 10 }} >{props.title}</Text>\n        </Pressable>\n      </View>\n    )\n  },\n  Input: (props: any) => {\n    return (\n      <View style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <TextInput placeholder={props.title.toString()} placeholderTextColor={\"#aaa\"} style={{ flex: 1, padding: 5, borderRadius: 10, borderWidth: 1, borderColor: '#a9a9a9', outlineWidth: 0 }}  {...props} />\n      </View>\n    )\n  },\n  Checkbox: (props: any) => {\n    return (\n      <Pressable style={{ borderWidth: 1, width: 70 * (props.size || 1), borderColor: \"transparent\", paddingHorizontal: 11, paddingVertical: 5, borderRightWidth: 1, borderRightColor: '#a9a9a9', flexDirection: 'row', justifyContent: props.numeric ? 'flex-end' : 'flex-start', alignItems: 'center' }} >\n        <LibIcon name='checkbox-blank-outline' style={{ marginTop: 5 }} />\n        <Text style={{ fontSize: 18, color: '#232323', textAlign: props.numeric ? 'right' : 'left', textAlignVertical: 'center', marginHorizontal: 5 }} >{props.numeric ? LibUtils.number(props.title) : props.title}</Text>\n      </Pressable>\n    )\n  }\n}\n\nconst Footer = {\n  Paginate: (props: any) => {\n    return (\n      <View style={{ flexDirection: 'row', alignSelf: 'flex-end', marginHorizontal: 16, marginVertical: 10, alignItems: 'center' }} >\n        <Text style={{ marginRight: 10, color: '#555' }} >Page 1 of 6</Text>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'page-first'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'chevron-left'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'chevron-right'} />\n        </Pressable>\n        <Pressable style={{ borderRadius: 2, height: 40, width: 40, alignItems: 'center', justifyContent: 'center', marginLeft: 2 }} >\n          <LibIcon name={'page-last'} />\n        </Pressable>\n      </View>\n    )\n  }\n}\n\nconst rawData = [\n  { id: 1, value: 'ABCD' },\n  { id: 1, value: 'ABCD' },\n  { id: 1, value: 'ABCD' },\n  { id: 1, value: 'ABCD' },\n]\n\nfunction DropDownItems({ title }: any) {\n  const styles = {\n    popupItem: {\n      justifyContent: 'center',\n      paddingLeft: 20,\n      paddingVertical: 15,\n      borderBottomWidth: 0.7,\n      borderBottomColor: '#ccc',\n    },\n    popupItemText: {},\n  }\n  return (\n    <View style={styles.popupItem}>\n      <Text style={styles.popupItemText}>{title}</Text>\n    </View>\n  );\n}\n\n\nconst Filter = (props: any) => {\n\n  const [show, setShow] = useSafeState(false)\n  const [filter, setFilter] = useSafeState<any>()\n\n\n  return (\n    <View style={{ flexDirection: 'row', padding: 16, alignItems: 'flex-start' }} >\n      <TextInput placeholder={'Search'} placeholderTextColor={\"#aaa\"} style={{ flex: 1, padding: 5, borderRadius: 3, paddingVertical: 11, borderWidth: 1, borderColor: '#afafaf', outlineWidth: 0 }} />\n      <View style={{ marginLeft: 10 }} >\n        <LibDropdown\n          label=\"Select or Enter\"\n          options={rawData}\n          value={filter}\n          renderItem={(item) => (\n            <Pressable style={{ zIndex: 500 }} key={item.id} onPress={() => { setFilter(item) }}>\n              <DropDownItems title={item.value} />\n            </Pressable>\n          )}\n        />\n      </View>\n    </View>\n  )\n}\n\nexport default function m(props: LibDatatableProps): any {\n\n  return (\n    <View style={{ flex: 1, paddingTop: LibStyle.STATUSBAR_HEIGHT + 20 }} >\n      <ScrollView horizontal style={{ backgroundColor: 'white' }} >\n        <View>\n          <View style={{ flexDirection: 'row', overflow: 'hidden', borderLeftWidth: 1, borderColor: \"#a9a9a9\", marginHorizontal: 16 }} >\n            {/* <Header.Text title={'No'} numeric /> */}\n            {\n              props.headers.map((title) => {\n                return (<Header.Text title={title.toUpperCase()} size={2} />)\n              })\n            }\n            <Header.Text title={'Keterangan'} size={4} />\n          </View>\n          <ScrollView>\n            <View style={{ overflow: 'hidden', marginHorizontal: 16, borderLeftWidth: 1, borderColor: \"#a9a9a9\", borderBottomWidth: 1 }} >\n              {\n                props?.data?.map?.((row, idx) => {\n                  const colors = idx % 2 != 0 ? '#f9f9ff' : \"white\"\n                  return (\n                    <View key={idx.toString()} style={{ flexDirection: 'row', backgroundColor: colors }} >\n                      {/* <Cell.Text title={idx + 1} numeric /> */}\n                      {\n                        props.headers.map((title) => {\n                          return (\n                            <Cell.Text title={row[title]} size={2} />\n                          )\n                        })\n                      }\n                      <Cell.Input title={''} size={4} />\n                    </View>\n                  )\n                })\n              }\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </View>\n  )\n}","// withHooks\n\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport { LibStyle } from 'esoftplay/cache/lib/style/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport { LibToastProperty } from 'esoftplay/cache/lib/toast/import';\nimport React, { useRef } from 'react';\nimport { Pressable, View } from 'react-native';\n\n\nexport interface MainInputArgs {\n\n}\nexport interface MainInputProps {\n  onSave: (title: string, variant: any[]) => void\n  defaultValue: any\n}\nexport default function m(props: MainInputProps): any {\n  const variantRef = useRef<LibInput>(null)\n  const titleRef = useRef<LibInput>(null)\n\n  return (\n    <View>\n      <LibTextstyle textStyle='largeTitle' text='Combinator' style={{ margin: 16 }} />\n      <LibInput\n        ref={titleRef}\n        label='Name'\n        defaultValue={props?.defaultValue?.title}\n        autoCapitalize='characters'\n      />\n      <LibInput\n        ref={variantRef}\n        label={'Variant (Pisahkan dengan enter)'}\n        multiline\n        defaultValue={props?.defaultValue?.variant?.join('\\n')}\n        style={{ height: 200 }}\n      />\n      <Pressable\n        onPress={() => {\n          if (!titleRef.current?.getText()) {\n            LibToastProperty.show(\"Title tidak boleh kosong\")\n            return\n          }\n          if (!variantRef.current?.getText()) {\n            LibToastProperty.show(\"Variant tidak boleh kosong\")\n            return\n          }\n          props.onSave(titleRef?.current?.getText(), variantRef.current?.getText().split('\\n'))\n        }}\n        style={[{ backgroundColor: '#2DA44E', height: 34, borderRadius: 5, alignItems: 'center', justifyContent: 'center', marginHorizontal: 16, padding: 20 }, LibStyle.elevation(4)]} >\n        <LibTextstyle textStyle='m_button' text='Save' style={{ color: 'white' }} />\n      </Pressable>\n    </View>\n  )\n}","// withHooks\n\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport { LibTextstyle } from 'esoftplay/cache/lib/textstyle/import';\nimport React from 'react';\nimport { View } from 'react-native';\n\n\nexport interface MainAddArgs {\n\n}\nexport interface MainAddProps {\n\n}\nexport default function m(props: MainAddProps): any {\n  return (\n    <View style={{ flex: 1, padding: 16, backgroundColor: 'white', borderRadius:28 }} >\n      <LibTextstyle textStyle='largeTitle' text='Tambah' style={{ marginHorizontal: 16, marginBottom: 50 }} />\n      <LibInput label='Nama' />\n    </View>\n  )\n}","// withHooks\n\nimport React, { useEffect } from 'react';\nimport { View } from 'react-native';\n\nimport { Printer, render, Text } from 'react-thermal-printer';\n\n\nexport interface MainMainArgs {\n\n}\nexport interface MainMainProps {\n\n}\n\nexport default function m(props: MainMainProps): any {\n\n  useEffect(() => {\n    (async () => {\n      const data = await render(\n        <Printer type=\"epson\">\n          <Text>Hello World</Text>\n        </Printer>\n      );\n\n      const port = await window.navigator.serial.requestPort();\n      await port.open({ baudRate: 9600 });\n\n      const writer = port.writable?.getWriter();\n      if (writer != null) {\n        await writer.write(data);\n        writer.releaseLock();\n      }\n    })();\n  }, [])\n\n  return (\n    <View style={{ flex: 1, backgroundColor: 'orange' }} >\n    </View>\n  )\n}","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibIcon } from 'esoftplay/cache/lib/icon/import';\nimport * as Print from 'expo-print';\nimport React, { useEffect } from 'react';\nimport { ImageBackground, Pressable, Text, View } from 'react-native';\nimport QRCode from 'react-native-qrcode-svg';\n\n\nexport interface PrintArgs {\n\n}\nexport interface PrintProps {\n\n}\n\nexport default function m(props: PrintProps): any {\n  const [show, setShow] = useSafeState(0)\n\n  useEffect(() => {\n    if (show == 0) {\n      setTimeout(() => {\n        Print.printAsync({})\n        setShow(1)\n      }, 500);\n    }\n  }, [show])\n\n  return (\n    <View style={{ flex: 1 }}>\n      <RenderIf show={show == 1} >\n        <Pressable style={{ margin: 16, position: 'absolute', top: 20, right: 20, width: '20mm', height: '20mm', backgroundColor: 'orange', borderRadius: '10mm', padding: 10, alignItems: 'center', justifyContent: 'center' }} onPress={() => { setShow(0) }} >\n          <LibIcon name='printer' color='white' size={'10mm'} />\n        </Pressable>\n      </RenderIf>\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n      <PrintA5 />\n    </View>\n  )\n}\n\nfunction RenderIf(props: any): any {\n  if (props.show) {\n    return props.children\n  }\n  return null\n}\n\nfunction PrintA5() {\n  return (\n    <ImageBackground source={{ uri: 'httpss://bbo.co.id/images/modules/bigbang/event/197/ticket/62fb1154ba827.png' }} style={{ width: '148mm', height: '209.8mm' }} >\n      <View style={{ position: 'absolute', top: '32.5mm', left: '12mm', right: '12mm', height: '51mm', padding: '1mm', }} >\n        <View style={{ flex: 1, flexDirection: 'row' }} >\n          <View style={{ width: '79mm', paddingRight: '2mm' }} >\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }} >\n              <Text>Tiket Onsite</Text>\n              <Text>IDR 20.000</Text>\n            </View>\n            <Text style={{ fontSize: 20, marginVertical: '1mm', fontWeight: '500' }} >LAMPUNG FAIR</Text>\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }} >\n              <Text>1 November 2022</Text>\n              <Text>10:00 - 11:00</Text>\n            </View>\n            <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }} >\n              <Text style={{ fontSize: 25, marginVertical: '1mm', fontWeight: '500', textAlign: 'center' }} >Tiket Onsite</Text>\n            </View>\n            <Text style={{ fontSize: 13, color:'#666' }} >*Tiket untuk masuk ke dalam area pameran dan konser.</Text>\n          </View>\n          <View style={{ marginLeft: '4mm', flex: 1, alignItems: 'center', justifyContent: 'center' }} >\n            <QRCode value=\"1234567890\" size={100} />\n            <Text style={{ marginTop: 10, fontSize: 12, fontWeight: '500' }} >SMAHDUYIHAJKIK</Text>\n          </View>\n        </View>\n      </View>\n    </ImageBackground>\n  )\n}","// withHooks\n\nimport { useSafeState } from 'esoftplay';\nimport { LibInput } from 'esoftplay/cache/lib/input/import';\nimport React, { useEffect, useRef } from 'react';\nimport { View } from 'react-native';\n\nexport interface MainSampleArgs {\n\n}\nexport interface MainSampleProps {\n\n}\nexport default function m(props: MainSampleProps): any {\n  const _name = useRef<LibInput>(null)\n  const [user, setUser] = useSafeState(undefined);\n  const _phone = useRef<LibInput>(null);\n\n  useEffect(() => {\n    _name.current?.getText()\n  }, [])\n\n  return (\n    <View style={{ backgroundColor: 'orange', flex: 1 }} >\n      <LibInput\n        base\n        ref={_name}\n        label={''}\n      />\n      <LibInput\n        ref={_phone}\n        label={'user'}\n      />\n    </View>\n  )\n}","// withHooks\n\nimport React from 'react';\nimport { Dimensions, View } from 'react-native';\n\n\nexport interface MainSideArgs {\n\n}\nexport interface MainSideProps {\n  children: any\n}\n\nexport function getSideWidth(): number {\n  return Dimensions.get('window').width > 800 ? 450 : 0\n}\n\nexport default function m(props: MainSideProps): any {\n  return (\n    /* SIDEBAR */\n    <View style={{ flex: 1, flexDirection: 'row' }} >\n      <View style={{ width: getSideWidth(), backgroundColor: 'orange', height: '100%' }} >\n\n      </View>\n      {props.children}\n    </View>\n  )\n}","// withHooks\n\n\nexport interface WebIndexArgs {\n  \n}\nexport interface WebIndexProps {\n  \n}\nexport default function m(props: WebIndexProps): any {\n  return null\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}","\nimport { LibNotification } from 'esoftplay/cache/lib/notification/import';\nimport { UserIndex } from 'esoftplay/cache/user/index/import';\nimport * as ErrorReport from 'esoftplay/error';\nimport { globalIdx } from 'esoftplay/global';\nimport * as Notifications from 'expo-notifications';\nimport React, { useEffect } from 'react';\nimport { enableFreeze, enableScreens } from 'react-native-screens';\n\t\t\nenableFreeze()\nenableScreens()\n\t\t\n\nNotifications.addNotificationResponseReceivedListener(x => LibNotification.onAction(x));\n\n\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\nserviceWorkerRegistration.register();\nexport default function App() {\n\tuseEffect(() => {\n\t\tglobalIdx.reset()\n\t\tErrorReport.getError()\n\t}, [])\n\n\treturn (<UserIndex />)\n}","module.exports = __webpack_public_path__ + \"static/media/adaptive-icon.e4e80208.png\";","module.exports = __webpack_public_path__ + \"static/media/favicon.fa4783d1.png\";","const { createRunOncePlugin, withAndroidManifest } = require('@expo/config-plugins');\n\n/**\n * @typedef {import('@expo/config-plugins').ConfigPlugin} ConfigPlugin\n * @typedef {import('@expo/config-plugins').AndroidManifest} AndroidManifest\n */\n\n/**\n * Remove the custom Expo dev client scheme from intent filters, which are set to `autoVerify=true`.\n * The custom scheme `<data android:scheme=\"exp+<slug>\"/>` seems to block verification for these intent filters.\n * This plugin makes sure there is no scheme in the autoVerify intent filters, that starts with `exp+`.\n * \n * @type {ConfigPlugin}\n */\nconst withAndroidVerfiedLinksWorkaround = (config) => (\n  withAndroidManifest(config, (config) => {\n    config.modResults = removeExpoSchemaFromVerifiedIntentFilters(config.modResults);\n    return config;\n  })\n);\n\n/**\n * Iterate over all `autoVerify=true` intent filters, and pull out schemes starting with `exp+`.\n * \n * @param {AndroidManifest} androidManifest\n */\nfunction removeExpoSchemaFromVerifiedIntentFilters(androidManifest) {\n  // see: https://github.com/expo/expo-cli/blob/f1624c75b52cc1c4f99354ec4021494e0eff74aa/packages/config-plugins/src/android/Scheme.ts#L164-L179\n  for (const application of androidManifest.manifest.application || []) {\n    for (const activity of application.activity || []) {\n      if (activityHasSingleTaskLaunchMode(activity)) {\n        for (const intentFilter of activity['intent-filter'] || []) {\n          if (intentFilterHasAutoVerification(intentFilter) && intentFilter?.data) {\n            intentFilter.data = intentFilterRemoveSchemeFromData(intentFilter, (scheme) => scheme?.startsWith('exp+'));\n          }\n        }\n        break;\n      }\n    }\n  }\n\n  return androidManifest;\n}\n\n/**\n * Determine if the activity should contain the intent filters to clean.\n * \n * @see https://github.com/expo/expo-cli/blob/f1624c75b52cc1c4f99354ec4021494e0eff74aa/packages/config-plugins/src/android/Scheme.ts#L166\n */\nfunction activityHasSingleTaskLaunchMode(activity) {\n  return activity?.$?.['android:launchMode'] === 'singleTask';\n}\n\n/**\n * Determine if the intent filter has `autoVerify=true`.\n */\nfunction intentFilterHasAutoVerification(intentFilter) {\n  return intentFilter?.$?.['android:autoVerify'] === 'true';\n}\n\n/**\n * Remove schemes from the intent filter that matches the function.\n */\nfunction intentFilterRemoveSchemeFromData(intentFilter, schemeMatcher) {\n  return intentFilter?.data?.filter(entry => !schemeMatcher(entry?.$['android:scheme'] || ''));\n}\n\nmodule.exports = createRunOncePlugin(withAndroidVerfiedLinksWorkaround, 'withAndroidVerfiedLinksWorkaround', '1.0.0');"],"sourceRoot":""}